datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AccountType {
  DEFAULT
  GOOGLE
}

enum ActivityLevel {
  SEDENTARY
  LIGHTLY_ACTIVE
  MODERATELY_ACTIVE
  VERY_ACTIVE
  EXTREMELY_ACTIVE
}

enum Sex {
  MALE
  FEMALE
  OTHER
  NOT_SPECIFIED
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}

model User {
  id            String          @id @default(uuid())
  accountType   AccountType     @default(DEFAULT)
  email         String          @unique
  username      String
  password      String
  connections   Connection[]
  product       Products[]      @relation("UserProducts")
  MealOnProduct MealOnProduct[]
  bodyBuild     BodyBuild[]
  MealHistory   MealHistory[]
}

model Connection {
  refreshToken String @unique
  user         User   @relation(fields: [userId], references: [id])
  userId       String
}

model Products {
  id            String          @id @default(uuid())
  title         String          @unique
  type          String
  description   String?
  energy        Float           @default(0)
  fat           Float           @default(0)
  saturatedFat  Float           @default(0)
  carbohydrates Float           @default(0)
  sugars        Float           @default(0)
  protein       Float           @default(0)
  fiber         Float           @default(0)
  salt          Float           @default(0)
  averageMass   Float           @default(0)
  imageBucketId String?
  user          User            @relation("UserProducts", fields: [userId], references: [id])
  meals         MealOnProduct[]
  EAN           Float?          @unique
  userId        String
}

model Meals {
  id            String          @id @default(uuid())
  title         String
  products      MealOnProduct[]
  imageBucketId String          @default("")
  mealType      MealType
  MealHistory   MealHistory[]
}

model MealOnProduct {
  id            String   @id @default(uuid())
  mealId        String
  productId     String
  weightInGrams Float
  meal          Meals    @relation(fields: [mealId], references: [id])
  product       Products @relation(fields: [productId], references: [id])
  user          User     @relation(fields: [userId], references: [id])
  userId        String
}

model BodyBuild {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  weightGoal    Float
  currentWeight Float
  sexe          Sex
  activityLevel ActivityLevel
  height        Float
  age           Int
}

model MealHistory {
  id     String   @id @default(uuid())
  user   User     @relation(fields: [userId], references: [id])
  userId String
  meal   Meals[]
  date   DateTime
}
